=head1 Simulation Base Driver

The Simulation driver was created to simulate functions that were not
supported by some CD drivers. It works jointly with the other driver
(known as "client"), using its pixel, line and text functions to
simulate arcs, sectors, polygons, boxes, and fillings with styles.

B<Important:> All simulation primitives are based in the client's
Pixel, Image and/or Line functions.

=head2 Use

The Simulation driver is used in several parts of the CD library.

In many drivers, the behavior of a given primitive may not be the
expected. Usually this is documented in the manual. If you wish to
activate the simulation of a primitive, simply call function B<
L<cdSimulate|../func/init.html#cdSimulate>> with the code of the
primitive to be simulated.

=head2 Behavior of Functions

=head2 Clipping

=over

=item * Clipping is not implemented in the simulation base driver. The
primary driver must implement its own clipping.

=back

=head2 Attributes

=over

=item * L<B< LineCap>|../func/filled.html#cdLineCap>: only CD_CAPFLAT
is supported.

=item * L<B< LineJoin>|../func/filled.html#cdLineJoin>: only CD_MITER
is supported.

=item * B<L< LineStyle|../func/lines.html#cdLineStyle>>: If line width
is greater than 1, the style is always continuous.

=item * L<B<Font>|../func/text.html#cdFont>: Selects a Truetype font
file for the L<FreeType|http://www.freetype.org/> library to render the
text. The typeface parameter is used to find the appropriate file.

The typeface parameter can be the name of a font or the name of a font
file (not including path, nor the extension ".ttf"). If a name is
specified some pre-defined correspondents are tried, for instance the
know font names "Courier", "Times" and "Helvetica" are mapped to
"cour", "times", and "arial", their styles are added to the font file
name as a suffix: "bd", "i" and "bi", to match bold, italic and
bold-italic. Those files are also available in the "cd/etc" folder of
the CD distribution packages. If the pre-defined names are not used,
the typeface parameter is used as the file name. It can also use a
manual font map added using the attribute B<ADDFONTMAP> (see bellow).

Font files can be located in the current directory, in the directory
pointed by the CDDIR environment variable, in the native system font
directory, or by using the full path of the file in the typeface
parameter. The ".ttf" file extension is always automatically added to
the end of the file name. In Linux font files are searched using
L<FontConfig|http://www.freedesktop.org/wiki/Software/fontconfig>.

The search order is: ADDFONTMAP, pre-defined names, native system, and
full path.

=back

=head2 B<Primitives>

=over

=item * B<L<Pixel|../func/marks.html#cdPixel>>: always uses the
client's pixel function. When clipping simulation is active, it
executes area and polygon clipping.

=item * L<B<Line>|../func/lines.html#cdLine>: draws lines pixel per
pixel.

=item * B<L<Rect|../func/lines.html#cdRect>>: simulated using the
client's B<Line>.

=item * L<B<Arc>|../func/lines.html#cdArc>: simulated using the
client's B<Line>.

=item * L<B<Sector>|../func/filled.html#cdSector>: simulated using the
client's B<Poly>.

=item * B<L<Chord|../func/filled.html#cdChord>>: simulated using the
client's B<Poly>

=item * L<B<Box>|../func/filled.html#cdBox>: simulated using the
client's B<Poly>.

=item * B<L<Begin|../func/lines.html#cdBegin>>,
L<B<Vertex>|../func/lines.html#cdVertex> and
L<B<End>|../func/lines.html#cdEnd>: simulated using the B<Line> or
B<Pixel> functions, depending on the interior style.

=item * L<B<Text>|../func/text.html#cdText>: text simulation is made
using TrueType font files in a transparent way for the user. Oriented
text is not supported.

=back

=head2 Exclusive Attributes

=over

=item * "B<ADDFONTMAP>": Add a font map between a type face name and a
file name. It has the format "Type Face=filename", For ex: "Arial
Narrow Bold=ARIALNB". "Type Face" is not case sensitive.

=back

=over

=item * "B<FREETYPEVERSION>": Returns a version string with the current
Freetype library being used, in the format "FreeType
E<lt>majorE<gt>.E<lt>minorE<gt>.E<lt>patchE<gt>".

=back

=cut