=head1 CD_DBUFFERRGB - Double Buffer Driver using a RGB image
(cdirgb.h)

Implements the concept of offscreen drawing. It is based on a Image RGB
(the back buffer) and any other canvas (the front buffer).

=head2 Use

The canvas is created by means of a call to function L<
B<cdCreateCanvas>|../func/init.html#cdCreateCanvas>(CD_DBUFFERRGB,
Data), after which other functions in the CD library can be called as
usual. This function creates a CD canvas to use with any existing
canvas. The parameter Data is a pointer to the already created canvas.

Any amount of such canvases may exist simultaneously. It is important
to note that a call to function L<
B<cdKillCanvas>|../func/init.html#cdKillCanvas> is required to properly
B<end> the driver. Call function L<
B<cdKillCanvas>|../func/init.html#cdKillCanvas> for this driver before
calling B<cdKillCanvas> for the client canvas driver.

The drawing functions will work normally as if they were drawn on the
image RGB driver. When function B< L<
cdCanvasFlush|../func/control.html#cdFlush>> is executed, the image is
drawn in the canvas passed as parameter in the canvas creation.

When the window's size changes, the RGB image is automatically
recreated using the same size as the canvas. This is done in the
function B< L< cdCanvasActivate|../func/init.html#cdActivate>>.

=head2 Behavior of Functions

This driver depends on the L<RGB Client Image Driver|irgb.html>.

=head2 Control

=over

=item * L<B<Flush>|../func/control.html#cdFlush>: draws the contents of
the image into the window. It is affected by B< Origin> and
B<Clipping>, but not by B<WriteMode>.

=back

=cut