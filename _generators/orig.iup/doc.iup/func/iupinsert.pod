=head1 IupInsert (Since 3.0)

Inserts an interface element B<before> another child of the container.
Valid for any element that contains other elements like dialog, frame,
hbox, vbox, zbox, menu, etc.

=head2 Parameters/Return

 Ihandle* IupInsert(Ihandle* ih, Ihandle* ref_child, Ihandle* new_child); [in C]
 iup.Insert(ih, ref_child, new_child: ihandle) -> (parent: ihandle) [in Lua]

B<ih>: Identifier of a container like hbox, vbox, zbox and menu.

B<ref_child>: Identifier of the element to be used as reference. Can be
NULL to insert as the first element.

B<new_child>: Identifier of the element to be inserted before the
reference.

Returns: the actual B<parent> if the interface element was successfully
inserted. Otherwise returns NULL (nil in Lua). Notice that the desired
parent can contains a set of elements and containers where the child
will be actually attached so the function returns the actual parent of
the element.

=head2 Notes

This function can be used when elements that will compose a container
are not known I<a priori> and should be dynamically constructed.

The new child can NOT be mapped. It will NOT map the new child into the
native system. If the parent is already mapped you must explicitly call
B<IupMap> for the appended child.

If the actual parent is a layout box (B<IupVbox>, B< IupHbox> or
B<IupZbox>) and you try to insert a child that it is already at the
parent child list, then the child is moved to the insert position.

The elements are NOT immediately repositioned. Call B<IupRefresh> for
the container* to update the dialog layout (* or any other element in
the dialog).

=head2 See Also

L<IupAppend|iupappend.html>, L<IupDetach|iupdetach.html>,
L<IupHbox|../elem/iuphbox.html>, L<IupVbox|../elem/iupvbox.html>,
L<IupZbox|../elem/iupzbox.html>, L<IupMenu|../elem/iupmenu.html>,
L<IupMap|iupmap.html>, L<IupUnmap|iupunmap.html>,
L<IupRefresh|iuprefresh.html>

=cut