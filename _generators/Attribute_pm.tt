#!/usr/bin/env perl

# BEWARE: this is a generated file, DO NOT EDIT THIS FILE MANUALLY!!!

package IUP::Internal::Attribute;

use strict;
use warnings;
use Carp;

# global table of available attributes per element (used for generating accessors)
my $attrib_table = {
[% FOR i IN alist -%]
  '[% i.module %]' => {
[% FOR j IN i.attributes -%]
    [% j.name %] => '[% j.flags %]', [% j.spaces %]# [% j.c1 %] [% j.c2 %]
[% END -%]
  },
[% END -%]
};

sub _get_attr_list {
  my $pkg = shift;
  my @list;
  push(@list, keys(%{$attrib_table->{_base}}));
  push(@list, keys(%{$attrib_table->{_dialog}})) if $pkg =~ /^IUP::(Dialog|ColorDlg|FileDlg|FontDlg|MessageDlg)$/;
  push(@list, keys(%{$attrib_table->{_box}}))    if $pkg =~ /^IUP::[CHVZ]box$/;
  push(@list, keys(%{$attrib_table->{$pkg}}));
  return keys %{{ map { $_ => 1 } @list }}; #return just uniq items
}

sub _is_attr_valid {
  my ($pkg, $name) = @_;
  carp "Warning: DO NOT USE _is_attr_valid!";
  return 1;
}

sub _get_attr_eval_code {
  my $pkg = shift;
  my $rv;
  for (_get_attr_list($pkg)) {
    $rv .= "*$pkg\::$_ = sub { return (scalar(\@_)>1) ? \$_[0]->SetAttribute('$_', \$_[1]) : \$_[0]->GetAttribute('$_') };\n";
  }
  return $rv;
}


1;

__END__

=head1 NAME

IUP::Internal::Attribute - INTERNAL FUNCTIONS, do not use them from outside!

=cut