#!/usr/bin/env perl

# BEWARE: this is a generated file, DO NOT EDIT THIS FILE MANUALLY!!!

package IUP::Internal::Attribute;

use strict;
use warnings;
use Carp;

# global table of available attributes per element (used for generating accessors)
my $attrib_table = {
[% FOR i IN alist -%]
  '[% i.module %]' => {
[% FOR j IN i.attributes -%]
    [% j.name %] => '[% j.flags %]', [% j.spaces %]# [% j.c1 %] [% j.c2 %]
[% END -%]
  },
[% END -%]
};

sub _get_attr_list {
  my $pkg = shift;
  my @rv = ();
  push(@rv, keys(%{$attrib_table->{_base}}));
  push(@rv, keys(%{$attrib_table->{_dialog}})) if $pkg =~ /^IUP::(Dialog|ColorDlg|FileDlg|FontDlg|MessageDlg)$/;
  push(@rv, keys(%{$attrib_table->{_box}}))    if $pkg =~ /^IUP::[CHVZ]box$/;
  push(@rv, keys(%{$attrib_table->{$pkg}}));
  return @rv;
}

sub _is_attr_valid {
  my ($pkg, $name) = @_;
  #my $h = $attrib_table->{$pkg};
  #return 0 unless defined($h);
  #return defined($h->{$name}) ? 1 : 0;
  carp "Warning: DO NOT USE _is_attr_valid!";
  return 1;
}

sub _get_attr_eval_code {
  my ($element, $p) = @_;
  my $rv = '';
  my $h = $attrib_table->{$element} or return $rv;
  
  for (keys %$h) {
    next if defined *{"$p\::$_"};
    $rv .= "*$p\::$_ = sub { return \$_[1] ? \$_[0]->SetAttribute('$_', \$_[1]) : \$_[0]->GetAttribute('$_') };\n";
  }

  return $rv;
}


1;

__END__

=head1 NAME

IUP::Internal::Attribute - INTERNAL FUNCTIONS, do not use them from outside!

=cut 