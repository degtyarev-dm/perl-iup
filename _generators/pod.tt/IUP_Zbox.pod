=for comment based on iup-3.5

[% h.name %]

[% n.iupzbox %]

[% h.desc %]

Creates a void container for composing elements in hidden layers with
only one layer visible. It is a box that piles up the children it
contains, only the one child is visible.

It does not have a native representation.

Zbox works by changing the VISIBLE attribute of its children, so if any
of the grand children has its VISIBLE attribute directly defined then
Zbox will NOT change its state.

[% h.usage %]

[% h.create %]

 #standard way
 my $zbox = IUP::Zbox->new( child=>[$elem1, $elem2], ANYATTRIBUTE=>'XXX' );
 
 #or with just a single child
 my $zbox = IUP::Zbox->new( child=>$elem, ANYATTRIBUTE=>'XXX' );
 
 #or with just 1 parameter (arrayref)
 my $zbox = IUP::Zbox->new( [$elem1, $elem2] );
 
 #or with just 1 parameter (reference to child elements)
 my $zbox = IUP::Zbox->new( $elem );

B<child:> (named parameter) List of the references to elements (or just a single element) that
will be placed in the box. Can be C<undef>.

B<IMPORTANT>: Each element must have a name defined by
L<SetName|[%m.elem%]/"SetName()">. In perl a name is always
automatically created, but you can change it later.

B<Returns:> the identifier of the created element, or C<undef> if an error occurs.

[% txt.new_attr %]

[% h.at %]

[%txt.at_intro%]

=over

=item B<ALIGNMENT> (non inheritable)

Defines the alignment of the visible
child. Possible values:

 "NORTH", "SOUTH", "WEST", "EAST",
 "NE", "SE", "NW", "SW",
 "ACENTER".

Default: "NW".

=item L<EXPAND|[%m.at%]/EXPAND> (non inheritable)

The default value is "YES".

=item L<FLOATING|[%m.at%]/FLOATING> (non inheritable, at children only)

If a child has FLOATING=YES then its size and position
will be ignored by the layout processing. Default: "NO". 

=item B<VALUE> (non inheritable)

The visible child accessed by its name. The
value passed must be the name of one of the children contained in the
zbox. Use L<SetName|[%m.elem%]/"SetName()"> or
XXX-FIX_ME to
associate a child to a name. In Lua you can also use the element
reference directly. When the value is changed the selected child is
made visible and all other children are made invisible, regardless
their previous visible state.

B<VALUE_HANDLE> (non inheritable)

The visible child accessed by its
handle. The value passed must be the handle of a child contained in the
zbox. When the zbox is created, the first element inserted is set as
the visible child. 

=item B<VALUEPOS> (non inheritable)

The visible child accessed by its
position. The value passed must be the index of a child contained in
the zbox, starting at 0. When the zbox is created, the first element
inserted is set as the visible child. 

=item L<SIZE|[%m.at%]/SIZE> / L<RASTERSIZE|[%m.at%]/RASTERSIZE> (non inheritable)

The default size is the smallest size that fits its largest child. All
child elements are considered even invisible ones, except when
FLOATING=YES in a child.

=item B<WID> (read-only)

Returns -1 if mapped.

=back

[%txt.at_common%]

=over

=item * L<FONT|[%m.at%]/FONT>,
L<CLIENTSIZE|[%m.at%]/CLIENTSIZE>,
L<CLIENTOFFSET|[%m.at%]/CLIENTOFFSET>,
L<POSITION|[%m.at%]/POSITION>,
L<MINSIZE|[%m.at%]/MINSIZE>,
L<MAXSIZE|[%m.at%]/MAXSIZE>

=back

[% h.notes %]

The box can be created with no elements and be dynamic filled using
L<Append|[%m.elem%]/"Append()"> or L<Insert|[%m.elem%]/"Insert()">.

[% h.examples %]

[% IF examples.iupzbox %]
The element B<IUP::Zbox> is used in the following sample scripts:

=over
[%FOREACH e IN examples.iupzbox %]
=item * L<[%e.pl%]|[%url.examples%][%e.pl%]>[%e.desc%]
[%END%]
=back 

[%ELSE%]
Unfortunately there are no sample scripts using this element.

[%END%]

[% h.see %]

L<IUP::Hbox|IUP::Hbox>, L<IUP::Vbox|IUP::Vbox>

[%IF flags.gennerate_origdoc -%]
The original doc: L<iupzbox.html|[%url.iuporigdoc%]elem/iupzbox.html>
[%END%] 

=cut