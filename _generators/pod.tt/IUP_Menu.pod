=for comment based on iup-3.5-XXX-UNFINISHED

[% h.name %]

[% n.iupmenu %]

[% h.desc %]

Creates a menu element, which groups 3 types of interface elements:
item, submenu and separator. Any other interface element defined inside
a menu will be an error.

[% h.usage %]

[% h.create %]

 $menu = IUP::Menu->new(Ihandle *child, ...);
 $menuv = IUP::Menuv->new(Ihandle **children);
 iup.menu{child, ...: ihandle} -> (elem: ihandle) [in Lua]
 menu(child, ...) [in LED]

B<child>, ... : List of identifiers that will be grouped by the menu.
NULL must be used to mark the end of the list in C. It can be empty.

[% txt.new_attr %]

B<Returns:> the identifier of the created element, or C<undef> if an error occurs.

[% h.at %]

[%txt.at_intro%]

=over

=item * L<BGCOLOR|[%m.at%]/BGCOLOR>

the background color of the
menu, affects all items in the menu. 

=item * B<X<RADIO>RADIO> (non inheritable)

enables the automatic toggle of one
child item. When a child item is selected the other item is
automatically deselected. The menu acts like a L<IUP::Radio|IUP::Radio> for its
children. Submenus and their children are not affected.

=item * L<WID|[%m.at%]/WID> (non inheritable)

In Windows, returns
the HMENU of the menu.

=back

[% h.cb %]

[%txt.cb_intro%]

=over

=item * L<OPEN_CB|[%m.cb%]/OPEN_CB>

Called just before the menu is
opened.

=back

=item * L<MENUCLOSE_CB|[%m.cb%]/MENUCLOSE_CB>

Called just after the
menu is closed.

----

=back

=item * L<MAP_CB|[%m.cb%]/MAP_CB>,
L<UNMAP_CB|[%m.cb%]/UNMAP_CB>

=back

[% h.notes %]

A menu can be a menu bar of a dialog, defined by the dialog's MENU
attribute, or a popup menu.

A popup menu is displayed for the user using the L<IUP::Popup|IUP::Popup> function
(usually on the mouse position) and disappears when an item is
selected.

L<IUP::Destroy|IUP::Destroy> should be called only for popup menus. Menu bars
associated with dialogs are automatically destroyed when the dialog is
destroyed. But if you change the menu of a dialog for another menu, the
previous one should be destroyed using L<IUP::Destroy|IUP::Destroy>. If you replace a
menu bar of a dialog, the previous menu is unmapped.

Any item inside a menu bar can retrieve attributes from the dialog
using L<IUP::GetAttribute|IUP::GetAttribute>. It is not necessary to call B< IUP::GetDialog>.

The menu can be created with no elements and be dynamic filled using
L<IUP::Append|IUP::Append> or
L<IUP::Insert|IUP::Insert>.

=head2 Lua Binding

Offers a "cleaner" syntax than LED for defining menu, submenu and
separator items. The list of elements in the menu is described as a
string, with one element after the other, separated by commas.

Each element can be:

 {"<item_name>"} - menu item
 {"<submenu_name>", <menu>} - submenu
 {} - separator

For example:

 mnu = iup.menu
 {
   iup.submenu
   {
     iup.menu
     {
       iup.item{title="IUP::Item 1 Checked",value="ON"},
       iup.separator{},
       iup.item{title="IUP::Item 2 Disabled",active="NO"}
     } 
     ;title="IUP::SubMenu 1"
   },
   iup.item{title="IUP::Item 3"},
   iup.item{title="IUP::Item 4"}
 }:popup(iup.CENTER, iup.CENTER)

The same example using the cleaner syntax:

 mnu = iup.menu
 {
   {
     "IUP::SubMenu 1",
     iup.menu
     {
       {"IUP::Item 1 Checked";value="ON"},
       {},
       {"IUP::Item 2 Disabled";active="NO"}
     } 
   },
   {"IUP::Item 3"},
   {"IUP::Item 4"}
 }:popup(iup.CENTER, iup.CENTER)

It is also possible to mix the cleaner syntax with the normal syntax or
with already create elements.

[% h.examples %]

[% IF examples.iupmenu %]
The element B<IUP::Menu> is used in the following sample scripts:

=over
[%FOREACH e IN examples.iupmenu %]
=item * L<[%e.pl%]|[%url.examples%][%e.pl%]>[%e.desc%]
[%END%]
=back 

[%ELSE%]
Unfortunately there are no sample scripts using this element.

[%END%]

[% h.see %]

L<IUP::Dialog|IUP::Dialog>, L<IUP::Item|IUP::Item>,
L<IUP::Separator|IUP::Separator>, L<IUP::Submenu|IUP::Submenu>,
L<IUP::Popup|IUP::Popup>,
L<IUP::Destroy|IUP::Destroy>

[%IF flags.gennerate_origdoc -%]
The original doc: L<iupmenu.html|[%url.iuporigdoc%]elem/iupmenu.html>
[%END%] 

=cut