=pod

=head1 NAME

IUP::Button - [GUI element] button decorated with text and/or an image

=head1 DESCRIPTION

GUI element that is a button. When selected, this
element activates a function in the application. Its visual
presentation can contain a text and/or an image.

=begin HTML

<p>
  <table border="1">
    <col>
    <col style="background-color: rgb(236, 233, 216);">
    <col style="background-color: rgb(212, 208, 200);">
    <col style="background-color: rgb(239, 235, 231);">
    <col style="background-color: rgb(173, 177, 194);">
    <tbody align="center">
      <tr>
        <th></th>
	<th style="text-align: center;">Windows<br>XP Style</th>
        <th style="text-align: center;">Windows<br>Classic</th>
        <th style="text-align: center;">GTK</th>
        <th style="text-align: center;">Motif</th>
      </tr>
      <tr>
        <th>image</th>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_winxp_image.png"></td>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_win2k_image.png"></td>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_gtk_image.png"></td>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_mot_image.png"></td>
      </tr>
      <tr>
        <th>text</th>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_winxp_text.png"></td>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_win2k_text.png"></td>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_gtk_text.png"></td>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_mot_text.png"></td>
      </tr>
      <tr>
        <th>image+text</th>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_winxp_imagetext.png"></td>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_win2k_imagetext.png"></td>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_gtk_imagetext.png"></td>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_mot_imagetext.png"></td>
      </tr>
      <tr>
        <th>background<br>color</th>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_winxp_bgcolor.png"></td>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_win2k_bgcolor.png"></td>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_gtk_bgcolor.png"></td>
        <td><img src="http://kmx.github.com/perl-iup/img-3.3/elem/iupbutton_mot_bgcolor.png"></td>
      </tr>
    </tbody>
  </table>
</p>

=end HTML

=head1 USAGE

=head2 CREATION - new() method

Simple button with text:

 my $button = IUP::Button->new( TITLE=>'Click me' );

Button with image:

 my $img = IUP::Image->new( file=>'icon.png' );
 my $button = IUP::Button->new( IMAGE=>$img );

Button with both text and image:

 my $img = IUP::Image->new( file=>'icon.png' );
 my $button = IUP::Button->new( TITLE=>'Click', IMAGE=>$img );

Button with a image from build-in ImageLibrary - see L<Manual::ImageLibrary|Manual::ImageLibrary>: 

 my $button = IUP::Button->new( IMAGE=>'IUP_Cancel' );

Color button with background color set:

 my $button1 = IUP::Button->new( BGCOLOR=>"0 200 0" ); #defined by RGB values
 my $button2 = IUP::Button->new( BGCOLOR=>IUP_RED );   #build-in constant
 
B<Note:> You can pass to C<new()> any other C<ATTRIBUTE=E<gt>'value'> pair relevant
to this element - see L<Manual02::CreatingElements|Manual02::CreatingElements>.

B<Returns:> the identifier of the created element, or C<undef> if an error occurs.

=head2 ATTRIBUTES

For more info about concept of attributes (setting/getting values etc.) in IUP
see L<Manual::Attributes|Manual::Attributes>. Attributes specific to this element:

=over

=item * X<ALIGNMENT>B<ALIGNMENT> (non inheritable)

Horizontal and vertical alignment.
Possible values: "ALEFT", "ACENTER" and "ARIGHT", combined to "ATOP",
"ACENTER" and "ABOTTOM". Default: "ACENTER:ACENTER". Partial values are
also accepted, like "ARIGHT" or ":ATOP", the other value will be used
from the current alignment. In Motif, vertical alignment is restricted
to "ACENTER". 

=item * B<L<BGCOLOR|IUP::Manual::Attributes::BGCOLOR>>

Background color. 
BGCOLOR is ignored always when FLAT=YES because it will inherit from the
native parent. If text and image are not defined, the BGCOLOR is used to
show a color not necessary as a background color of the button, in this case
set the button size because the natural size will be very small. In
Windows, when using the Windows driver or the GTK driver, the BGCOLOR
attribute is ignored if text or image is defined. Default: the global
attribute DLGBGCOLOR.

=item * X<CANFOCUS>B<CANFOCUS> (creation only, non inheritable)

enables the focus
traversal of the control. In Windows the button will respect CANFOCUS
in opposite to the other controls. Default: YES. 

=item * B<FLAT> (creation only)

Hides the button borders until the mouse enter
the button area. Can be YES or NO.

=item * B<L<FGCOLOR|IUP::Manual::Attributes::FGCOLOR>>

Text color. Default: the global attribute DLGFGCOLOR.

=item * B<IMAGE> (non inheritable)

Image name. If set before map defines the
behavior of the button to contain an image. The natural size will be
size of the image in pixels, plus the button borders. 
Use L<IUP->SetHandle|IUP::SetHandle> or L<IUP::SetAttributeHandle|IUP::SetAttributeHandle>
to associate an image to a name. See also L<IUP::Image|IUP::Image>. If
TITLE is also defined and not empty both will be shown (except in
Motif). (GTK 2.6)

=item * B<IMINACTIVE> (non inheritable)

Image name of the element when
inactive. If it is not defined then the IMAGE is used and the colors
will be replaced by a modified version of the background color creating
the disabled effect. GTK will also change the inactive image to look
like other inactive objects. (GTK 2.6)

=item * B<IMPRESS> (non inheritable)

Image name of the pressed button. If
IMPRESS and IMAGE are defined, the button borders are not shown and not
computed in size computation. When the button is clicked the pressed
image does not offset. In Motif the button will lose its focus feedback
also. (GTK 2.6)

=item * B<IMPRESSBORDER> (non inheritable)

if enabled the button borders will
be shown and computed even if IMPRESS is defined. Can be "YES" or "NO".
Default: "NO".

=item * B<IMAGEPOSITION> (non inheritable)

Position of the image relative to
the text when both are displayed. Can be: LEFT, RIGHT, TOP, BOTTOM.
Default: LEFT.  (GTK 2.10)

=item * B<MARKUP> (GTK only)

allows the title string to contains pango markup
commands. Works only if a mnemonic is NOT defined in the title. Can be
"YES" or "NO". Default: "NO".

=item * B<PADDING>

internal margin. Works just like the MARGIN attribute of
the L<IUP::Hbox|IUP::Hbox> and L<IUP::Vbox|IUP::Vbox> containers, but uses a different name to
avoid inheritance problems. Default value: "0x0". 

=item * B<SPACING> (creation only)

defines the spacing between the image
associated and the button's text. Default: "2".

=item * B<L<TITLE|IUP::Manual::Attributes::TITLE>> (non inheritable)

Button's text. If
IMAGE is not defined before map, then the default behavior is to
contain only a text. The button behavior can not be changed after map.
The natural size will be larger enough to include all the text in the
selected font, even using multiple lines, plus the button borders. The
'\n' character is accepted for line change. The "&" character can be
used to define a mnemonic, the next character will be used as key. Use
"&&" to show the "&" character instead on defining a mnemonic. The
button can be activated from any control in the dialog using the
"Alt+key" combination. (mnemonic support since 3.0)

=back

The following L<common attributes|Manual::Attributes/Common Attributes> are also accepted:

=over

=item * L<ACTIVE|IUP::Manual::Attributes::ACTIVE>, L<FONT|IUP::Manual::Attributes::FONT>,
L<EXPAND|IUP::Manual::Attributes::EXPAND>, L<X|IUP::Manual::Attributes::X>,
L<Y|IUP::Manual::Attributes::Y>, L<POSITION|../attrib/iup_position.html>, L<MINSIZE|../attrib/iup_minsize.html>,
L<MAXSIZE|../attrib/iup_maxsize.html>, L<WID|IUP::Manual::Attributes::WID>,
L<TIP|IUP:Manual::Attributes::TIP>, L<SIZE|IUP::Manual::Attributes::SIZE>,
L<RASTERSIZE|IUP:Manual::Attributes::RASTERSIZE>, L<ZORDER|IUP:Manual::Attributes::ZORDER>,
L<VISIBLE|IUP:Manual::Attributes::VISIBLE>

=back

=head2 CALLBACKS

For more info about concept of callbacks (setting callback handlers etc.) in IUP
see L<Manual::Callbacks|Manual::Callbacks>. Callbacks specific to this element:

=over

=item * B<L<ACTION|Manual::Attributes/ACTION>>

Action generated when the button 1
(usually left) is selected. This callback is called only after the
mouse is released and when it is released inside the button area.

 sub action_handler {
   my ($self) = @_;
   #...
 }

B<$self:> identifier of the element that activated the event (referrence to IUP::Button).

B<Returns:> IUP_CLOSE will be processed.

=item * B<L<BUTTON_CB|Manual::Attributes/BUTTON_CB>>

Action generated when any mouse button is pressed and released.

For more details see L<generic description of BUTTON_CB|Manual::Attributes/BUTTON_CB> callback.

=back

The following L<common callbacks|Manual::Callbacks/Common Callbacks> are also accepted:

=over

=item * L<MAP_CB|../call/iup_map_cb.html>,
L<UNMAP_CB|../call/iup_unmap_cb.html>,
L<GETFOCUS_CB|../call/iup_getfocus_cb.html>,
L<KILLFOCUS_CB|../call/iup_killfocus_cb.html>,
L<ENTERWINDOW_CB|../call/iup_enterwindow_cb.html>,
L<LEAVEWINDOW_CB|../call/iup_leavewindow_cb.html>,
L<K_ANY|../call/iup_k_any.html>,
L<HELP_CB|../call/iup_help_cb.html>

=back

=head2 NOTES

Buttons with images and/or texts can not change its behavior after
mapped. This is a creation dependency. But after creation the image can
be changed for another image, and the text for another text.

Buttons are activated using Enter or Space keys.

=head1 EXAMPLES

L<Browse for Example Files|../../examples/>

The buttons with image and text simultaneous have PADDING=5x5, the
other buttons have no padding. The buttons with no text and BGCOLOR
defined have their RASTERSIZE set.

Motif

Windows

Classic

Windows

w/ Styles

GTK

=head1 SEE ALSO_xxx

L<IUP::Image|IUP::Image>, L<IUP::Toggle|IUP::Toggle>, L<IUP::Button|IUP::Button>

=cut