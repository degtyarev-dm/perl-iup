IUP::Image*
- implement missing methods 
  iup.LoadImage(file_name: string) -> (elem: ihandle) [in Lua] (xxx check what obj type has resulting iHandle xxx)
  iup.SaveImage(ih: ihandle, file_name, format: string) -> (ret: boolean) [in Lua]
- maybe one IUP::Image (not 3 Image/ImageRGB/ImageRGBA)
- new( ... colors=>[ ] )
- new( ... pixels=>pack('C*', @array) )
- new( ... 1=>.. 2=>.. 3=>.. )
- new( file=>.. )
- no need for:
  iup.GetNativeHandleImage(handle: userdata) -> (image: imImage) [in Lua]
  iup.GetImageNativeHandle(image: imImage) -> (handle: userdata) [in Lua]

IUP::Canvas
- implement missing XS methods to IUP::Internal::Canvas (see Canvas.xs - look for 'xxx TODO')
- maybe call cdCanvasActivate() inside cdLine and similar cases
- maybe not name methods like "cdMark" but rather just "Mark" (maybe not: collision SetAttribute vs. cdSetAttribute)
- somehow handle CD_xxx constants
- check wd.h for wdCanvas... functions + add them to Canvas.xs

IUP::CanvasGL
- finish implementation in LibraryIUP.xs
- IupGLCanvasOpen global function or IUP::CanvasGL class method?
- IupGLWait       global function or IUP::CanvasGL class method?

IUP::ImageLib
- missing -> add
- check memory consumption (maybe separate lib/IUP/Internal/ImageLib.xs)
- Iup::ImageLib->Open() - perhaps follow lua: In Lua, when require "iupluaimglib" is used this function will be automatically called.

IUP::Internal::Element
- change: _create_element should set $self->ihandle value
- maybe missing (comparing to LUA)
  sub GetAttributeData (see LUA implementation)
  sub SetAttributes vs. sub StoreAttribute
  sub GetName (we have $self->name)
- maybe not needed (comparing to LUA)
  sub GetCallback
- GetAttributes 
  in scalar context = string, in list? context = hash?
  or: GetAttributesStr vs. GetAttributesHRef
- tests for all common functions

IUP::OleControl
- missing -> add
- conditionally only on Win32

IUP module
- maybe missing (comparing to LUA)
  sub SetHandle ... IUP->SetHandle('xx', $d->ihandle);  
- maybe not needed (comparing to LUA)
  sub Close
  sub GetFocus  (we have in Element)
  sub GetHandle (we have in Element)
- consider:
  sub Open (probably not)
- tests for all global functions

Ideas from ruby bindings:
- iup.* namespace
- cd.* namespace (constants cd::BLUE, ...)
- just one iup.image (RGB, RGBA - ??? perhaps not supported)
- cdcanvas = Cd.ActiveCanvas()
- iupim just: IupLoadImage, IupSaveImage
- GLCanvasOpen, GL... (global function, not methods of glcanvas class)

Examples
- rewrite all examples from lua to perl
- synchronize ratehr with C examples (they are more complete)

Generate POD documentation
- work on _generators/proc-html2pod.pl
- perhaps html > pod.tt > manually edit *.pod.tt >  conversion *.pod.tt to *.pod

all XSs - BOOT section
- put init calls somewhere else
- maybe BEGIN / END

Constants:
- maybe move key related constants into to IUP::Keys (what about mouse related constants)
- decide what to do with: sub IUP_isPrint (check the doc)

DOC
- pplot.pl: # xxx TODO.DOC xxx note in doc that DS_ has to be set after ->PPlotEnd()
- tree: # xxx TODO xxx note in doc that tree->SetAttribude has to go after dialog->Show

XS - compile warnings
- LibraryIUP / Linux: warning: ISO C90 forbids mixed declarations and code (when using myST2xxx)
- LibraryIUP / Linux: warning: unused variable targ | RETVAL (when using PPCODE)
- LibraryIUP - remove unnecessary use of MyST2xxx() macros

Linux - platform specific issues
- (<unknown>:4352): Pango-WARNING **: Error loading GSUB table 85
  before MainLoop
- 'Quit' in main menu requires double click

Packaging
- RHEL 5 + FC 13,12,11
  - http://search.cpan.org/dist/cpan2rpm/
  - http://search.cpan.org/dist/Ovid/
- Db 4,5 (Ubuntu?)
  - http://search.cpan.org/dist/Debian-Apt-PM/
  - http://www.debian-administration.org/articles/78
- Linux distro info
  - http://distrowatch.com/table.php?distribution=ubuntu (10.04/LTS,9.10,8.04/LTS)
  - http://distrowatch.com/table.php?distribution=debian (5,4)
  - http://distrowatch.com/table.php?distribution=fedora (13,12,11)
  - http://distrowatch.com/table.php?distribution=redhat (5,4)
- vmware images: 
  - http://chrysaor.info/?page=images&filter=Ubuntu
  - http://www.thoughtpolice.co.uk/vmware/

Callbacks generation
- missing support for K_* callbacks (no hurry, lua does not implemt them)

Global issues
- check memory leaks - http://use.perl.org/~jozef/journal/40411
- detection when running without initialized GUI
- detection of current windowing system
- detection of codepage used in GUI

Consider splitting IUP::Internal::LibraryIup into:
- IUP::Internal::LibraryIup
- IUP::Internal::LibraryIupControl
- IUP::Internal::LibraryCd
- IUP::Internal::LibraryIm
- IUP::Internal::LibraryImLib
(postponed, the first try did not work as expected)

Build.PL
- RHEL5 compatibility: create_makefile_pl => 'small'; (see Alien::wxWidgets) - probably not
- using: release_testing automated_testing interactive
