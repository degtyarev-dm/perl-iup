=head1 NAME

IUP::Vbox - [GUI element] container for composing elements vertically

=head1 DESCRIPTION

Creates a void container for composing elements vertically. It is a box
that arranges the elements it contains from top to bottom.

It does not have a native representation.

=head1 USAGE

=head2 CREATION - new() method

 $vbox = IUP::Vbox->new(Ihandle *child, ...);
 $vboxv = IUP::Vboxv->new(Ihandle **children);
 iup.vbox{child, ...: ihandle} -> (elem: ihandle) [in Lua]
 vbox(child, ...) [in LED]

B<child>, ... : List of the identifiers that will be placed in the box.
NULL must be used to define the end of the list in C. It can be empty.

NOTE: You can pass to C<new()> other C<ATTRIBUTE=E<gt>'value'> or C<CALLBACKNAME=E<gt>\&func> pairs relevant
to this element - see L<IUP::Manual::02_Elements|IUP::Manual::02_Elements>.

B<Returns:> the identifier of the created element, or C<undef> if an error occurs.

=head2 ATTRIBUTES

For more info about concept of attributes (setting/getting values etc.)
see L<IUP::Manual::03_Attributes|IUP::Manual::03_Attributes>. Attributes specific to this element:

=over

=item * B<ALIGNMENT> (non inheritable)

Horizontally aligns the elements.
Possible values: "ALEFT", "ACENTER", "ARIGHT". Default: "ALEFT".

=item * L<EXPAND|IUP::Manual::03_Attributes/EXPAND> (non inheritable*)

The default
value is "YES". See the documentation of the attribute for EXPAND
inheritance.

=item * B<EXPANDCHILDREN> (non inheritable)

forces all children to expand
horizontally. Default: "NO". This has the same effect as setting
EXPAND=HORIZONTAL on each child, but their vertical expansion will be
preserved. 

=item * B<EXPANDWEIGHT> (non inheritable) B<(at children only)>

If a child
defines the expand weight, then it is used to multiply the free space
used for expansion. (since iup-3.1)

=item * L<FLOATING|IUP::Manual::03_Attributes/FLOATING> (non inheritable) B<(at
children only)>

If a child has FLOATING=YES then its size and position
will be ignored by the layout processing. Default: "NO". 

=item * B<GAP, CGAP>

Defines a vertical space in pixels between the children,
=item * B<CGAP> is in the same units of the B<SIZE> attribute for the height.
Default

"0". (CGAP since iup-3.0)

=item * B<NGAP, NCGAP> (non inheritable)

Same as B< GAP> but are non
inheritable. 

=item * B<HOMOGENEOUS> (non inheritable)

forces all children to get equal
vertical space. The natural size height will be based on the highest
child. Default: "NO". Notice that this does not changes the children
size, only the available space for each one of them to expand. (since
3.0)

=item * B<MARGIN, CMARGIN>

Defines a margin in pixels, B<CMARGIN >is in the
same units of the B< SIZE> attribute. Its value has the format
"I<width>xI<height>", where I< width> and I<height> are integer values
corresponding to the horizontal and vertical margins, respectively.
Default: "0x0" (no margin). (CMARGIN since iup-3.0)

=item * B<NMARGIN, NCMARGIN> (non inheritable)

Same as B<MARGIN> but are non
inheritable. 

=item * B<NORMALIZESIZE> (non inheritable)

normalizes all children natural
size to be the biggest natural size among them. All natural width will
be set to the biggest width, and all natural height will be set to the
biggest height according to is value. Can be NO, HORIZONTAL, VERTICAL
or BOTH. Default: "NO". 

=item * L<SIZE|IUP::Manual::03_Attributes/SIZE> /
L<RASTERSIZE|IUP::Manual::03_Attributes/RASTERSIZE> (non inheritable)

Defines
the height of the box. When consulted behaves as the standard
SIZE/RASTERSIZE attributes. The standard format "wxh" can also be used,
but width will be ignored (since iup-3.3).

=item * B<WID> (read-only)

returns -1 if mapped.

=back

The following L<common attributes|IUP::Manual::03_Attributes/Common Attributes> are also accepted:

=over

=item * L<FONT|IUP::Manual::03_Attributes/FONT>,
L<CLIENTSIZE|IUP::Manual::03_Attributes/CLIENTSIZE>,
L<CLIENTOFFSET|IUP::Manual::03_Attributes/CLIENTOFFSET>,
L<POSITION|IUP::Manual::03_Attributes/POSITION>,
L<MINSIZE|IUP::Manual::03_Attributes/MINSIZE>,
L<MAXSIZE|IUP::Manual::03_Attributes/MAXSIZE>

also accepted.

=back

=head1 NOTES

The box can be created with no elements and be dynamic filled using
L<IUP::Append|IUP::Append> or
L<IUP::Insert|IUP::Insert>.

The box will NOT expand its children, it will allow its children to
expand according to the space left in the box parent. So for the
expansion to occur, the children must be expandable with EXPAND!=NO,
and there must be room in the box parent.

=head1 EXAMPLES

L<Browse for Example Files|../../examples/>

[IMAGE]

[IMAGE]

HOMOGENEOUS=YES

[IMAGE]

EXPANDCHILDREN=YES

[IMAGE]

VISIBLE=NO

[IMAGE]

+FLOATING=NO

[IMAGE]

=head1 SEE ALSO

L<IUP::Zbox|IUP::Zbox>, L<IUP::Hbox|IUP::Hbox>

=cut