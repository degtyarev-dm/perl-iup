=head1 NAME

IUP::FontDlg - [pre-defined dialog] selecting a font

=head1 DESCRIPTION 

Creates the Font Dialog element. It is a predefined dialog for
selecting a font. The dialog can be shown with the L<IUP::Popup|IUP::Popup> function
only.

=head1 USAGE

=head2 CREATION - new() method

 Ihandle* IUP::FontDlg(void); [in C]
 iup.fontdlg{} -> (elem: ihandle) [in Lua]
 fontdlg() [in LED]

Returns: the identifier of the created element, or NULL if an error
occurs.

=head2 ATTRIBUTES

For more info about concept of attributes (setting/getting values etc.)
see L<IUP::Manual::03_Attributes|IUP::Manual::03_Attributes>. Attributes specific to this element:

=over

=item * B<PREVIEWTEXT> [GTK and Motif only]

the text shown in the preview
area. If not defined the system will provide a default text.

=item * B<COLOR> [Windows Only]

The initial color value and the returned
selected value if the user pressed the Ok button. In Windows the Choose
Font dialog allows the user to select a color from a pre-defined list
of colors.

=item * L<PARENTDIALOG|IUP::Manual::03_Attributes/PARENTDIALOG> (creation only)

Name
of a dialog to be used as parent. This dialog will be always in front
of the parent dialog.

=item * B<STATUS> (read-only)

defined to "1" if the user pressed the Ok
button, NULL if pressed the Cancel button.

=item * L<TITLE|IUP::Manual::03_Attributes/TITLE>

Dialog title.

=item * B<VALUE>

The initial font value and the returned selected value if the
user pressed the Ok button. Has the same format of the
L<FONT|IUP::Manual::03_Attributes/FONT> attribute.

=back

=head2 CALLBACKS

For more info about concept of callbacks (setting callback handlers etc.)
see L<IUP::Manual::04_Callbacks|IUP::Manual::04_Callbacks>. Callbacks specific to this element:

=over

=item * L<HELP_CB|../call/iup_help_cb.html>

Action generated when the Help
button is pressed.

=back

=head1 NOTES

The L<IUP::FontDlg|IUP::FontDlg> is a native pre-defined dialog not altered by
L<IUP::SetLanguage|IUP::SetLanguage>.

To show the dialog, use function L<IUP::Popup|IUP::Popup>. In Lua, use the B<popup>
function.

The dialog is mapped only inside L<IUP::Popup|IUP::Popup>, L<IUP::Map|IUP::Map> does nothing.

In Windows, the dialog will be modal relative only to its parent or to
the active dialog.

=head1 EXAMPLES

 Ihandle* dlg = IUP::FontDlg();
 
 IUP::SetAttribute(dlg, "COLOR", "128 0 255");
 IUP::SetAttribute(dlg, "VALUE", "Times New Roman, Bold 20");
 IUP::SetAttribute(dlg, "TITLE", "IUP::FontDlg Test");
 IUP::SetCallback(dlg, "HELP_CB", (Icallback)help_cb);
 
 IUP::Popup(dlg, IUP_CURRENT, IUP_CURRENT);
 
 if (IUP::GetInt(dlg, "STATUS"))
 {
   printf("OK\n");
   printf("  VALUE(%s)\n", IUP::GetAttribute(dlg, "VALUE"));
   printf("  COLOR(%s)\n", IUP::GetAttribute(dlg, "COLOR"));
 }
 else
   printf("CANCEL\n");
 
 IUP::Destroy(dlg); 

Windows XP

[IMAGE]

GTK/GNOME

[IMAGE]

Motif/MWM

[IMAGE]

=head1 SEE ALSO

L<IUP::MessageDlg|IUP::MessageDlg>, L<IUP::FileDlg|IUP::FileDlg>,
L<IUP::Popup|IUP::Popup>

=cut