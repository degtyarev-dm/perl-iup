=for comment based on iup-3.5-XXX-UNFINISHED

=head1 NAME

IUP::Zbox - [GUI element] container for composing elements in hidden layers with only one layer visible

=head1 DESCRIPTION

Creates a void container for composing elements in hidden layers with
only one layer visible. It is a box that piles up the children it
contains, only the one child is visible.

It does not have a native representation.

Zbox works by changing the VISIBLE attribute of its children, so if any
of the grand children has its VISIBLE attribute directly defined then
Zbox will NOT change its state.

=head1 USAGE

=head2 CREATION - new() method

 $zbox = IUP::Zbox->new(Ihandle *child, ...);
 $zboxv = IUP::Zboxv->new(Ihandle **children);
 iup.zbox{child, ... : ihandle} -> (elem: ihandle) [in Lua]
 zbox(child, ...) [in LED]

B<child, ... >: List of the elements that will be placed in the box.
NULL must be used to define the end of the list in C. It can be empty.

=over

B<IMPORTANT>: in C, each element must have a name defined by
L<IUP::SetHandle|IUP::SetHandle>. In Lua a name is always
automatically created, but you can change it later.

=back

NOTE: You can pass to C<new()> other C<ATTRIBUTE=E<gt>'value'> or C<CALLBACKNAME=E<gt>\&func> pairs relevant
to this element - see L<IUP::Manual::02_Elements|IUP::Manual::02_Elements>.

B<Returns:> the identifier of the created element, or C<undef> if an error occurs.

=head2 ATTRIBUTES

For more info about concept of attributes (setting/getting values etc.)
see L<IUP::Manual::03_Attributes|IUP::Manual::03_Attributes>. Attributes specific to this element:

=over

=item * B<ALIGNMENT> (non inheritable)

Defines the alignment of the visible
child. Possible values:

"NORTH", "SOUTH", "WEST", "EAST",

"NE", "SE", "NW", "SW",

"ACENTER".

Default: "NW".

=item * L<EXPAND|IUP::Manual::03_Attributes/EXPAND> (non inheritable)

The default
value is "YES".

=item * L<FLOATING|IUP::Manual::03_Attributes/FLOATING> (non inheritable) B<(at
children only)>

If a child has FLOATING=YES then its size and position
will be ignored by the layout processing. Default: "NO". 

=item * B<VALUE> (non inheritable)

The visible child accessed by its name. The
value passed must be the name of one of the children contained in the
zbox. Use L<IUP::SetHandle|IUP::SetHandle> or
=item * L<IUP::SetAttributeHandle|IUP::SetAttributeHandle> to
associate a child to a name. In Lua you can also use the element
reference directly. When the value is changed the selected child is
made visible and all other children are made invisible, regardless
their previous visible state.

B<VALUE_HANDLE> (non inheritable)

The visible child accessed by its
handle. The value passed must be the handle of a child contained in the
zbox. When the zbox is created, the first element inserted is set as
the visible child. 

=item * B<VALUEPOS> (non inheritable)

The visible child accessed by its
position. The value passed must be the index of a child contained in
the zbox, starting at 0. When the zbox is created, the first element
inserted is set as the visible child. 

=item * L<SIZE|IUP::Manual::03_Attributes/SIZE> /
L<RASTERSIZE|IUP::Manual::03_Attributes/RASTERSIZE> (non inheritable)

The
default size is the smallest size that fits its largest child. All
child elements are considered even invisible ones, except when
FLOATING=YES in a child.

=item * B<WID> (read-only)

returns -1 if mapped.

=back

The following L<common attributes|IUP::Manual::03_Attributes/Common Attributes> are also accepted:

=over

=item * L<FONT|IUP::Manual::03_Attributes/FONT>,
L<CLIENTSIZE|IUP::Manual::03_Attributes/CLIENTSIZE>,
L<CLIENTOFFSET|IUP::Manual::03_Attributes/CLIENTOFFSET>,
L<POSITION|IUP::Manual::03_Attributes/POSITION>,
L<MINSIZE|IUP::Manual::03_Attributes/MINSIZE>,
L<MAXSIZE|IUP::Manual::03_Attributes/MAXSIZE>

also accepted.

=back

=head1 NOTES

The box can be created with no elements and be dynamic filled using
L<IUP::Append|IUP::Append> or
L<IUP::Insert|IUP::Insert>.

=head1 EXAMPLES

L<Browse for Example Files|../../examples/>

=head1 SEE ALSO

L<IUP::Hbox|IUP::Hbox>, L<IUP::VBox|IUP::VBox>

=cut