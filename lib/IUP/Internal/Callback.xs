/* BEWARE: this is a generated file, DO NOT EDIT THIS FILE MANUALLY!!! */

#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"
#include "ppport.h"

#include <iup.h>
#include <cd.h>

int
internal_cb_ACTION_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("ACTION", 6)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(ACTION) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_BUTTON_CB_iiiis (Ihandle* ih,int button,int pressed,int x,int y,char* status)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("BUTTON_CB", 9)));
	XPUSHs(sv_2mortal(newSViv(button)));
	XPUSHs(sv_2mortal(newSViv(pressed)));
	XPUSHs(sv_2mortal(newSViv(x)));
	XPUSHs(sv_2mortal(newSViv(y)));
	XPUSHs(sv_2mortal(newSVpv(status, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(BUTTON_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_ENTERWINDOW_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("ENTERWINDOW_CB", 14)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(ENTERWINDOW_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_GETFOCUS_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("GETFOCUS_CB", 11)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(GETFOCUS_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_HELP_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("HELP_CB", 7)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(HELP_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_KILLFOCUS_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("KILLFOCUS_CB", 12)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(KILLFOCUS_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_K_ANY_i (Ihandle* ih,int c)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("K_ANY", 5)));
	XPUSHs(sv_2mortal(newSViv(c)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(K_ANY) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_LEAVEWINDOW_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("LEAVEWINDOW_CB", 14)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(LEAVEWINDOW_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MAP_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MAP_CB", 6)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MAP_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_UNMAP_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("UNMAP_CB", 8)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(UNMAP_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_ACTION_ff (Ihandle* ih,float posx,float posy)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("ACTION", 6)));
	XPUSHs(sv_2mortal(newSVnv(posx)));
	XPUSHs(sv_2mortal(newSVnv(posy)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(ACTION) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_DROPFILES_CB_siii (Ihandle* ih,const char* filename,int num,int x,int y)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("DROPFILES_CB", 12)));
	XPUSHs(sv_2mortal(newSVpv(filename, 0)));
	XPUSHs(sv_2mortal(newSViv(num)));
	XPUSHs(sv_2mortal(newSViv(x)));
	XPUSHs(sv_2mortal(newSViv(y)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(DROPFILES_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_FOCUS_CB_i (Ihandle* ih,int focus)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("FOCUS_CB", 8)));
	XPUSHs(sv_2mortal(newSViv(focus)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(FOCUS_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_KEYPRESS_CB_ii (Ihandle* ih,int c,int press)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("KEYPRESS_CB", 11)));
	XPUSHs(sv_2mortal(newSViv(c)));
	XPUSHs(sv_2mortal(newSViv(press)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(KEYPRESS_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MOTION_CB_iis (Ihandle* ih,int x,int y,char* status)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MOTION_CB", 9)));
	XPUSHs(sv_2mortal(newSViv(x)));
	XPUSHs(sv_2mortal(newSViv(y)));
	XPUSHs(sv_2mortal(newSVpv(status, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MOTION_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_RESIZE_CB_ii (Ihandle* ih,int width,int height)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("RESIZE_CB", 9)));
	XPUSHs(sv_2mortal(newSViv(width)));
	XPUSHs(sv_2mortal(newSViv(height)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(RESIZE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_SCROLL_CB_iff (Ihandle* ih,int op,float posx,float posy)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("SCROLL_CB", 9)));
	XPUSHs(sv_2mortal(newSViv(op)));
	XPUSHs(sv_2mortal(newSVnv(posx)));
	XPUSHs(sv_2mortal(newSVnv(posy)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(SCROLL_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_WHEEL_CB_fiis (Ihandle* ih,float delta,int x,int y,char* status)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("WHEEL_CB", 8)));
	XPUSHs(sv_2mortal(newSVnv(delta)));
	XPUSHs(sv_2mortal(newSViv(x)));
	XPUSHs(sv_2mortal(newSViv(y)));
	XPUSHs(sv_2mortal(newSVpv(status, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(WHEEL_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_WOM_CB_i (Ihandle* ih,int state)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("WOM_CB", 6)));
	XPUSHs(sv_2mortal(newSViv(state)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(WOM_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_DRAW_CB_iiiiiiv (Ihandle* ih,int line,int column,int xmin,int xmax,int ymin,int ymax,cdCanvas* canvas)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb_cnv7() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("DRAW_CB", 7)));
	XPUSHs(sv_2mortal(newSViv(line)));
	XPUSHs(sv_2mortal(newSViv(column)));
	XPUSHs(sv_2mortal(newSViv(xmin)));
	XPUSHs(sv_2mortal(newSViv(xmax)));
	XPUSHs(sv_2mortal(newSViv(ymin)));
	XPUSHs(sv_2mortal(newSViv(ymax)));
	XPUSHs(sv_2mortal(newSViv(PTR2IV(canvas))));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb_cnv7",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(DRAW_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_HEIGHT_CB_i (Ihandle* ih,int line)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("HEIGHT_CB", 9)));
	XPUSHs(sv_2mortal(newSViv(line)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(HEIGHT_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_HSPAN_CB_ii (Ihandle* ih,int line,int column)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("HSPAN_CB", 8)));
	XPUSHs(sv_2mortal(newSViv(line)));
	XPUSHs(sv_2mortal(newSViv(column)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(HSPAN_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MOUSECLICK_CB_iiiiiis (Ihandle* ih,int button,int pressed,int line,int column,int x,int y,char* status)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MOUSECLICK_CB", 13)));
	XPUSHs(sv_2mortal(newSViv(button)));
	XPUSHs(sv_2mortal(newSViv(pressed)));
	XPUSHs(sv_2mortal(newSViv(line)));
	XPUSHs(sv_2mortal(newSViv(column)));
	XPUSHs(sv_2mortal(newSViv(x)));
	XPUSHs(sv_2mortal(newSViv(y)));
	XPUSHs(sv_2mortal(newSVpv(status, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MOUSECLICK_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MOUSEMOTION_CB_iiiis (Ihandle* ih,int line,int column,int x,int y,char* r)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MOUSEMOTION_CB", 14)));
	XPUSHs(sv_2mortal(newSViv(line)));
	XPUSHs(sv_2mortal(newSViv(column)));
	XPUSHs(sv_2mortal(newSViv(x)));
	XPUSHs(sv_2mortal(newSViv(y)));
	XPUSHs(sv_2mortal(newSVpv(r, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MOUSEMOTION_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_NCOLS_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("NCOLS_CB", 8)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(NCOLS_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_NLINES_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("NLINES_CB", 9)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(NLINES_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_SCROLLING_CB_ii (Ihandle* ih,int line,int column)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("SCROLLING_CB", 12)));
	XPUSHs(sv_2mortal(newSViv(line)));
	XPUSHs(sv_2mortal(newSViv(column)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(SCROLLING_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_VSPAN_CB_ii (Ihandle* ih,int line,int column)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("VSPAN_CB", 8)));
	XPUSHs(sv_2mortal(newSViv(line)));
	XPUSHs(sv_2mortal(newSViv(column)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(VSPAN_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_WIDTH_CB_i (Ihandle* ih,int column)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("WIDTH_CB", 8)));
	XPUSHs(sv_2mortal(newSViv(column)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(WIDTH_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_CHANGE_CB_ccc (Ihandle* ih,unsigned char r,unsigned char g,unsigned char b)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("CHANGE_CB", 9)));
	XPUSHs(sv_2mortal(newSViv(r)));
	XPUSHs(sv_2mortal(newSViv(g)));
	XPUSHs(sv_2mortal(newSViv(b)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(CHANGE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_DRAG_CB_ccc (Ihandle* ih,unsigned char r,unsigned char g,unsigned char b)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("DRAG_CB", 7)));
	XPUSHs(sv_2mortal(newSViv(r)));
	XPUSHs(sv_2mortal(newSViv(g)));
	XPUSHs(sv_2mortal(newSViv(b)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(DRAG_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_VALUECHANGED_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("VALUECHANGED_CB", 15)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(VALUECHANGED_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

char*
internal_cb_CELL_CB_i (Ihandle* ih,int cell)
{
	dSP;
	int count;
	char* rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("CELL_CB", 7)));
	XPUSHs(sv_2mortal(newSViv(cell)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(CELL_CB) has not returned single scalar value!\n");
	rv = POPpx;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_EXTENDED_CB_i (Ihandle* ih,int cell)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("EXTENDED_CB", 11)));
	XPUSHs(sv_2mortal(newSViv(cell)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(EXTENDED_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_SELECT_CB_ii (Ihandle* ih,int cell,int type)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("SELECT_CB", 9)));
	XPUSHs(sv_2mortal(newSViv(cell)));
	XPUSHs(sv_2mortal(newSViv(type)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(SELECT_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_SWITCH_CB_ii (Ihandle* ih,int prim_cell,int sec_cell)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("SWITCH_CB", 9)));
	XPUSHs(sv_2mortal(newSViv(prim_cell)));
	XPUSHs(sv_2mortal(newSViv(sec_cell)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(SWITCH_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_BUTTON_PRESS_CB_d (Ihandle* ih,double angle)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("BUTTON_PRESS_CB", 15)));
	XPUSHs(sv_2mortal(newSVnv(angle)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(BUTTON_PRESS_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_BUTTON_RELEASE_CB_d (Ihandle* ih,double angle)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("BUTTON_RELEASE_CB", 17)));
	XPUSHs(sv_2mortal(newSVnv(angle)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(BUTTON_RELEASE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MOUSEMOVE_CB_d (Ihandle* ih,double angle)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MOUSEMOVE_CB", 12)));
	XPUSHs(sv_2mortal(newSVnv(angle)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MOUSEMOVE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_CLOSE_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("CLOSE_CB", 8)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(CLOSE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_COPYDATA_CB_si (Ihandle* ih,char* cmdLine,int size)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("COPYDATA_CB", 11)));
	XPUSHs(sv_2mortal(newSVpv(cmdLine, 0)));
	XPUSHs(sv_2mortal(newSViv(size)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(COPYDATA_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MDIACTIVATE_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MDIACTIVATE_CB", 14)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MDIACTIVATE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MOVE_CB_ii (Ihandle* ih,int x,int y)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MOVE_CB", 7)));
	XPUSHs(sv_2mortal(newSViv(x)));
	XPUSHs(sv_2mortal(newSViv(y)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MOVE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_SHOW_CB_i (Ihandle* ih,int state)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("SHOW_CB", 7)));
	XPUSHs(sv_2mortal(newSViv(state)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(SHOW_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_TRAYCLICK_CB_iii (Ihandle* ih,int but,int pressed,int dclick)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("TRAYCLICK_CB", 12)));
	XPUSHs(sv_2mortal(newSViv(but)));
	XPUSHs(sv_2mortal(newSViv(pressed)));
	XPUSHs(sv_2mortal(newSViv(dclick)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(TRAYCLICK_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_FILE_CB_ss (Ihandle* ih,const char* file_name,const char* status)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("FILE_CB", 7)));
	XPUSHs(sv_2mortal(newSVpv(file_name, 0)));
	XPUSHs(sv_2mortal(newSVpv(status, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(FILE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_HIGHLIGHT_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("HIGHLIGHT_CB", 12)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(HIGHLIGHT_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_ACTION_sii (Ihandle* ih,char* text,int pos,int state)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("ACTION", 6)));
	XPUSHs(sv_2mortal(newSVpv(text, 0)));
	XPUSHs(sv_2mortal(newSViv(pos)));
	XPUSHs(sv_2mortal(newSViv(state)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(ACTION) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_CARET_CB_iii (Ihandle* ih,int lin,int col,int pos)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("CARET_CB", 8)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	XPUSHs(sv_2mortal(newSViv(pos)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(CARET_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_DBLCLICK_CB_is (Ihandle* ih,int pos,char* text)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("DBLCLICK_CB", 11)));
	XPUSHs(sv_2mortal(newSViv(pos)));
	XPUSHs(sv_2mortal(newSVpv(text, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(DBLCLICK_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_DROPDOWN_CB_i (Ihandle* ih,int state)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("DROPDOWN_CB", 11)));
	XPUSHs(sv_2mortal(newSViv(state)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(DROPDOWN_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_EDIT_CB_is (Ihandle* ih,int c,char* new_value)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("EDIT_CB", 7)));
	XPUSHs(sv_2mortal(newSViv(c)));
	XPUSHs(sv_2mortal(newSVpv(new_value, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(EDIT_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MULTISELECT_CB_s (Ihandle* ih,char* value)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MULTISELECT_CB", 14)));
	XPUSHs(sv_2mortal(newSVpv(value, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MULTISELECT_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_ACTION_CB_iiiis (Ihandle* ih,int c,int lin,int col,int edition,char* after)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("ACTION_CB", 9)));
	XPUSHs(sv_2mortal(newSViv(c)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	XPUSHs(sv_2mortal(newSViv(edition)));
	XPUSHs(sv_2mortal(newSVpv(after, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(ACTION_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_BGCOLOR_CB_iiIII (Ihandle* ih,int lin,int col,unsigned int* red,unsigned int* green,unsigned int* blue)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("BGCOLOR_CB", 10)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 4) croak("Error: _execute_cb(BGCOLOR_CB) has not returned 4 values!\n");
	rv = POPi;
	*red = POPi;
	*green = POPi;
	*blue = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_CLICK_CB_iis (Ihandle* ih,int lin,int col,char* status)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("CLICK_CB", 8)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	XPUSHs(sv_2mortal(newSVpv(status, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(CLICK_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_DROPCHECK_CB_ii (Ihandle* ih,int lin,int col)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("DROPCHECK_CB", 12)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(DROPCHECK_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_DROPSELECT_CB_iinsii (Ihandle* ih,int lin,int col,Ihandle* drop,char* t,int i,int v)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb_ih3() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("DROPSELECT_CB", 13)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	XPUSHs(sv_2mortal(newSViv(PTR2IV(drop))));
	XPUSHs(sv_2mortal(newSVpv(t, 0)));
	XPUSHs(sv_2mortal(newSViv(i)));
	XPUSHs(sv_2mortal(newSViv(v)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb_ih3",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(DROPSELECT_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_DROP_CB_nii (Ihandle* ih,Ihandle* drop,int lin,int col)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb_ih1() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("DROP_CB", 7)));
	XPUSHs(sv_2mortal(newSViv(PTR2IV(drop))));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb_ih1",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(DROP_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_EDITION_CB_iiii (Ihandle* ih,int lin,int col,int mode,int update)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("EDITION_CB", 10)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	XPUSHs(sv_2mortal(newSViv(mode)));
	XPUSHs(sv_2mortal(newSViv(update)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(EDITION_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_ENTERITEM_CB_ii (Ihandle* ih,int lin,int col)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("ENTERITEM_CB", 12)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(ENTERITEM_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_FGCOLOR_CB_iiIII (Ihandle* ih,int lin,int col,unsigned int* red,unsigned int* green,unsigned int* blue)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("FGCOLOR_CB", 10)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 4) croak("Error: _execute_cb(FGCOLOR_CB) has not returned 4 values!\n");
	rv = POPi;
	*red = POPi;
	*green = POPi;
	*blue = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

char*
internal_cb_FONT_CB_ii (Ihandle* ih,int lin,int col)
{
	dSP;
	int count;
	char* rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("FONT_CB", 7)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(FONT_CB) has not returned single scalar value!\n");
	rv = POPpx;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_LEAVEITEM_CB_ii (Ihandle* ih,int lin,int col)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("LEAVEITEM_CB", 12)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(LEAVEITEM_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MARKEDIT_CB_iii (Ihandle* ih,int lin,int col,int marked)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MARKEDIT_CB", 11)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	XPUSHs(sv_2mortal(newSViv(marked)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MARKEDIT_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MARK_CB_ii (Ihandle* ih,int lin,int col)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MARK_CB", 7)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MARK_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MOUSEMOVE_CB_ii (Ihandle* ih,int lin,int col)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MOUSEMOVE_CB", 12)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MOUSEMOVE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_RELEASE_CB_iis (Ihandle* ih,int lin,int col,char* status)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("RELEASE_CB", 10)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	XPUSHs(sv_2mortal(newSVpv(status, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(RELEASE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_SCROLLTOP_CB_ii (Ihandle* ih,int lin,int col)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("SCROLLTOP_CB", 12)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(SCROLLTOP_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

char*
internal_cb_VALUE_CB_ii (Ihandle* ih,int lin,int col)
{
	dSP;
	int count;
	char* rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("VALUE_CB", 8)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(VALUE_CB) has not returned single scalar value!\n");
	rv = POPpx;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_VALUE_EDIT_CB_iis (Ihandle* ih,int lin,int col,char* newval)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("VALUE_EDIT_CB", 13)));
	XPUSHs(sv_2mortal(newSViv(lin)));
	XPUSHs(sv_2mortal(newSViv(col)));
	XPUSHs(sv_2mortal(newSVpv(newval, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(VALUE_EDIT_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MENUCLOSE_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MENUCLOSE_CB", 12)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MENUCLOSE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_OPEN_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("OPEN_CB", 7)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(OPEN_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_DELETEBEGIN_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("DELETEBEGIN_CB", 14)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(DELETEBEGIN_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_DELETEEND_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("DELETEEND_CB", 12)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(DELETEEND_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_DELETE_CB_iiff (Ihandle* ih,int index,int sample_index,float x,float y)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("DELETE_CB", 9)));
	XPUSHs(sv_2mortal(newSViv(index)));
	XPUSHs(sv_2mortal(newSViv(sample_index)));
	XPUSHs(sv_2mortal(newSVnv(x)));
	XPUSHs(sv_2mortal(newSVnv(y)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(DELETE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_EDITBEGIN_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("EDITBEGIN_CB", 12)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(EDITBEGIN_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_EDITEND_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("EDITEND_CB", 10)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(EDITEND_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_EDIT_CB_iiffFF (Ihandle* ih,int index,int sample_index,float x,float y,float* new_x,float* new_y)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("EDIT_CB", 7)));
	XPUSHs(sv_2mortal(newSViv(index)));
	XPUSHs(sv_2mortal(newSViv(sample_index)));
	XPUSHs(sv_2mortal(newSVnv(x)));
	XPUSHs(sv_2mortal(newSVnv(y)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 3) croak("Error: _execute_cb(EDIT_CB) has not returned 3 values!\n");
	rv = POPi;
	*new_x = POPn;
	*new_y = POPn;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_POSTDRAW_CB_v (Ihandle* ih,cdCanvas* cnv)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb_cnv1() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("POSTDRAW_CB", 11)));
	XPUSHs(sv_2mortal(newSViv(PTR2IV(cnv))));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb_cnv1",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(POSTDRAW_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_PREDRAW_CB_v (Ihandle* ih,cdCanvas* cnv)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb_cnv1() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("PREDRAW_CB", 10)));
	XPUSHs(sv_2mortal(newSViv(PTR2IV(cnv))));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb_cnv1",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(PREDRAW_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_SELECTBEGIN_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("SELECTBEGIN_CB", 14)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(SELECTBEGIN_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_SELECTEND_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("SELECTEND_CB", 12)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(SELECTEND_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_SELECT_CB_iiffi (Ihandle* ih,int index,int sample_index,float x,float y,int select)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("SELECT_CB", 9)));
	XPUSHs(sv_2mortal(newSViv(index)));
	XPUSHs(sv_2mortal(newSViv(sample_index)));
	XPUSHs(sv_2mortal(newSVnv(x)));
	XPUSHs(sv_2mortal(newSVnv(y)));
	XPUSHs(sv_2mortal(newSViv(select)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(SELECT_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_SPIN_CB_i (Ihandle* ih,int inc)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("SPIN_CB", 7)));
	XPUSHs(sv_2mortal(newSViv(inc)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(SPIN_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_TABCHANGE_CB_nn (Ihandle* ih,Ihandle* new_tab,Ihandle* old_tab)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb_ih12() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("TABCHANGE_CB", 12)));
	XPUSHs(sv_2mortal(newSViv(PTR2IV(new_tab))));
	XPUSHs(sv_2mortal(newSViv(PTR2IV(old_tab))));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb_ih12",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(TABCHANGE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_ACTION_is (Ihandle* ih,int c,char* new_value)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("ACTION", 6)));
	XPUSHs(sv_2mortal(newSViv(c)));
	XPUSHs(sv_2mortal(newSVpv(new_value, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(ACTION) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_ACTION_CB_ (Ihandle* ih)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("ACTION_CB", 9)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(ACTION_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_ACTION_i (Ihandle* ih,int state)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("ACTION", 6)));
	XPUSHs(sv_2mortal(newSViv(state)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(ACTION) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_BRANCHCLOSE_CB_i (Ihandle* ih,int id)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("BRANCHCLOSE_CB", 14)));
	XPUSHs(sv_2mortal(newSViv(id)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(BRANCHCLOSE_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_BRANCHOPEN_CB_i (Ihandle* ih,int id)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("BRANCHOPEN_CB", 13)));
	XPUSHs(sv_2mortal(newSViv(id)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(BRANCHOPEN_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_DRAGDROP_CB_iiii (Ihandle* ih,int drag_id,int drop_id,int isshift,int iscontrol)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("DRAGDROP_CB", 11)));
	XPUSHs(sv_2mortal(newSViv(drag_id)));
	XPUSHs(sv_2mortal(newSViv(drop_id)));
	XPUSHs(sv_2mortal(newSViv(isshift)));
	XPUSHs(sv_2mortal(newSViv(iscontrol)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(DRAGDROP_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_EXECUTELEAF_CB_i (Ihandle* ih,int id)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("EXECUTELEAF_CB", 14)));
	XPUSHs(sv_2mortal(newSViv(id)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(EXECUTELEAF_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MULTISELECTION_CB_Ai (Ihandle* ih,int* ids,int n)
{
	dSP;
	int count;
	int rv;
	int loc_i;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MULTISELECTION_CB", 17)));
	for(loc_i=0; loc_i<n; loc_i++) XPUSHs(sv_2mortal(newSViv(ids[loc_i])));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MULTISELECTION_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_MULTIUNSELECTION_CB_Ai (Ihandle* ih,int* ids,int n)
{
	dSP;
	int count;
	int rv;
	int loc_i;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("MULTIUNSELECTION_CB", 19)));
	for(loc_i=0; loc_i<n; loc_i++) XPUSHs(sv_2mortal(newSViv(ids[loc_i])));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(MULTIUNSELECTION_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_NODEREMOVED_CB_s (Ihandle* ih,void* userdata)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("NODEREMOVED_CB", 14)));
	XPUSHs(sv_2mortal(newSVpv(userdata, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(NODEREMOVED_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_RENAME_CB_is (Ihandle* ih,int id,char* title)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("RENAME_CB", 9)));
	XPUSHs(sv_2mortal(newSViv(id)));
	XPUSHs(sv_2mortal(newSVpv(title, 0)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(RENAME_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_RIGHTCLICK_CB_i (Ihandle* ih,int id)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("RIGHTCLICK_CB", 13)));
	XPUSHs(sv_2mortal(newSViv(id)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(RIGHTCLICK_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_SELECTION_CB_ii (Ihandle* ih,int id,int status)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("SELECTION_CB", 12)));
	XPUSHs(sv_2mortal(newSViv(id)));
	XPUSHs(sv_2mortal(newSViv(status)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(SELECTION_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 

int
internal_cb_SHOWRENAME_CB_i (Ihandle* ih,int id)
{
	dSP;
	int count;
	int rv;

	ENTER;
	SAVETMPS;

	/* push params for _execute_cb() */
	PUSHMARK(SP);
	XPUSHs(sv_2mortal(newSViv(PTR2IV(ih))));
	XPUSHs(sv_2mortal(newSVpvn("SHOWRENAME_CB", 13)));
	XPUSHs(sv_2mortal(newSViv(id)));
	PUTBACK;

	count = call_pv("IUP::Internal::Callback::_execute_cb",G_SCALAR);

	SPAGAIN;

	if (count != 1) croak("Error: _execute_cb(SHOWRENAME_CB) has not returned single scalar value!\n");
	rv = POPi;

	PUTBACK;
	FREETMPS;
	LEAVE;
	
	return rv;
} 


MODULE = IUP::Internal::Callback	PACKAGE = IUP::Internal::Callback

BOOT:
/* empty boot */


void
_init_cb_ACTION_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_ACTION_);

void
_init_cb_BUTTON_CB_iiiis(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_BUTTON_CB_iiiis);

void
_init_cb_ENTERWINDOW_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_ENTERWINDOW_CB_);

void
_init_cb_GETFOCUS_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_GETFOCUS_CB_);

void
_init_cb_HELP_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_HELP_CB_);

void
_init_cb_KILLFOCUS_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_KILLFOCUS_CB_);

void
_init_cb_K_ANY_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_K_ANY_i);

void
_init_cb_LEAVEWINDOW_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_LEAVEWINDOW_CB_);

void
_init_cb_MAP_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MAP_CB_);

void
_init_cb_UNMAP_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_UNMAP_CB_);

void
_init_cb_ACTION_ff(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_ACTION_ff);

void
_init_cb_DROPFILES_CB_siii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_DROPFILES_CB_siii);

void
_init_cb_FOCUS_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_FOCUS_CB_i);

void
_init_cb_KEYPRESS_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_KEYPRESS_CB_ii);

void
_init_cb_MOTION_CB_iis(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MOTION_CB_iis);

void
_init_cb_RESIZE_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_RESIZE_CB_ii);

void
_init_cb_SCROLL_CB_iff(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_SCROLL_CB_iff);

void
_init_cb_WHEEL_CB_fiis(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_WHEEL_CB_fiis);

void
_init_cb_WOM_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_WOM_CB_i);

void
_init_cb_DRAW_CB_iiiiiiv(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_DRAW_CB_iiiiiiv);

void
_init_cb_HEIGHT_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_HEIGHT_CB_i);

void
_init_cb_HSPAN_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_HSPAN_CB_ii);

void
_init_cb_MOUSECLICK_CB_iiiiiis(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MOUSECLICK_CB_iiiiiis);

void
_init_cb_MOUSEMOTION_CB_iiiis(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MOUSEMOTION_CB_iiiis);

void
_init_cb_NCOLS_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_NCOLS_CB_);

void
_init_cb_NLINES_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_NLINES_CB_);

void
_init_cb_SCROLLING_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_SCROLLING_CB_ii);

void
_init_cb_VSPAN_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_VSPAN_CB_ii);

void
_init_cb_WIDTH_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_WIDTH_CB_i);

void
_init_cb_CHANGE_CB_ccc(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_CHANGE_CB_ccc);

void
_init_cb_DRAG_CB_ccc(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_DRAG_CB_ccc);

void
_init_cb_VALUECHANGED_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_VALUECHANGED_CB_);

void
_init_cb_CELL_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_CELL_CB_i);

void
_init_cb_EXTENDED_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_EXTENDED_CB_i);

void
_init_cb_SELECT_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_SELECT_CB_ii);

void
_init_cb_SWITCH_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_SWITCH_CB_ii);

void
_init_cb_BUTTON_PRESS_CB_d(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_BUTTON_PRESS_CB_d);

void
_init_cb_BUTTON_RELEASE_CB_d(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_BUTTON_RELEASE_CB_d);

void
_init_cb_MOUSEMOVE_CB_d(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MOUSEMOVE_CB_d);

void
_init_cb_CLOSE_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_CLOSE_CB_);

void
_init_cb_COPYDATA_CB_si(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_COPYDATA_CB_si);

void
_init_cb_MDIACTIVATE_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MDIACTIVATE_CB_);

void
_init_cb_MOVE_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MOVE_CB_ii);

void
_init_cb_SHOW_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_SHOW_CB_i);

void
_init_cb_TRAYCLICK_CB_iii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_TRAYCLICK_CB_iii);

void
_init_cb_FILE_CB_ss(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_FILE_CB_ss);

void
_init_cb_HIGHLIGHT_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_HIGHLIGHT_CB_);

void
_init_cb_ACTION_sii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_ACTION_sii);

void
_init_cb_CARET_CB_iii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_CARET_CB_iii);

void
_init_cb_DBLCLICK_CB_is(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_DBLCLICK_CB_is);

void
_init_cb_DROPDOWN_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_DROPDOWN_CB_i);

void
_init_cb_EDIT_CB_is(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_EDIT_CB_is);

void
_init_cb_MULTISELECT_CB_s(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MULTISELECT_CB_s);

void
_init_cb_ACTION_CB_iiiis(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_ACTION_CB_iiiis);

void
_init_cb_BGCOLOR_CB_iiIII(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_BGCOLOR_CB_iiIII);

void
_init_cb_CLICK_CB_iis(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_CLICK_CB_iis);

void
_init_cb_DROPCHECK_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_DROPCHECK_CB_ii);

void
_init_cb_DROPSELECT_CB_iinsii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_DROPSELECT_CB_iinsii);

void
_init_cb_DROP_CB_nii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_DROP_CB_nii);

void
_init_cb_EDITION_CB_iiii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_EDITION_CB_iiii);

void
_init_cb_ENTERITEM_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_ENTERITEM_CB_ii);

void
_init_cb_FGCOLOR_CB_iiIII(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_FGCOLOR_CB_iiIII);

void
_init_cb_FONT_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_FONT_CB_ii);

void
_init_cb_LEAVEITEM_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_LEAVEITEM_CB_ii);

void
_init_cb_MARKEDIT_CB_iii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MARKEDIT_CB_iii);

void
_init_cb_MARK_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MARK_CB_ii);

void
_init_cb_MOUSEMOVE_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MOUSEMOVE_CB_ii);

void
_init_cb_RELEASE_CB_iis(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_RELEASE_CB_iis);

void
_init_cb_SCROLLTOP_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_SCROLLTOP_CB_ii);

void
_init_cb_VALUE_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_VALUE_CB_ii);

void
_init_cb_VALUE_EDIT_CB_iis(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_VALUE_EDIT_CB_iis);

void
_init_cb_MENUCLOSE_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MENUCLOSE_CB_);

void
_init_cb_OPEN_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_OPEN_CB_);

void
_init_cb_DELETEBEGIN_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_DELETEBEGIN_CB_);

void
_init_cb_DELETEEND_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_DELETEEND_CB_);

void
_init_cb_DELETE_CB_iiff(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_DELETE_CB_iiff);

void
_init_cb_EDITBEGIN_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_EDITBEGIN_CB_);

void
_init_cb_EDITEND_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_EDITEND_CB_);

void
_init_cb_EDIT_CB_iiffFF(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_EDIT_CB_iiffFF);

void
_init_cb_POSTDRAW_CB_v(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_POSTDRAW_CB_v);

void
_init_cb_PREDRAW_CB_v(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_PREDRAW_CB_v);

void
_init_cb_SELECTBEGIN_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_SELECTBEGIN_CB_);

void
_init_cb_SELECTEND_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_SELECTEND_CB_);

void
_init_cb_SELECT_CB_iiffi(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_SELECT_CB_iiffi);

void
_init_cb_SPIN_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_SPIN_CB_i);

void
_init_cb_TABCHANGE_CB_nn(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_TABCHANGE_CB_nn);

void
_init_cb_ACTION_is(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_ACTION_is);

void
_init_cb_ACTION_CB_(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_ACTION_CB_);

void
_init_cb_ACTION_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_ACTION_i);

void
_init_cb_BRANCHCLOSE_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_BRANCHCLOSE_CB_i);

void
_init_cb_BRANCHOPEN_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_BRANCHOPEN_CB_i);

void
_init_cb_DRAGDROP_CB_iiii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_DRAGDROP_CB_iiii);

void
_init_cb_EXECUTELEAF_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_EXECUTELEAF_CB_i);

void
_init_cb_MULTISELECTION_CB_Ai(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MULTISELECTION_CB_Ai);

void
_init_cb_MULTIUNSELECTION_CB_Ai(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_MULTIUNSELECTION_CB_Ai);

void
_init_cb_NODEREMOVED_CB_s(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_NODEREMOVED_CB_s);

void
_init_cb_RENAME_CB_is(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_RENAME_CB_is);

void
_init_cb_RIGHTCLICK_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_RIGHTCLICK_CB_i);

void
_init_cb_SELECTION_CB_ii(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_SELECTION_CB_ii);

void
_init_cb_SHOWRENAME_CB_i(ih,action)
		Ihandle* ih;
		char* action;
	CODE:
		IupSetCallback(ih, action, (Icallback)internal_cb_SHOWRENAME_CB_i);

