#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"
#include "ppport.h"

#include <iup.h>
#include <cd.h>
#include <cdiup.h>

/* macros for processing args in fuctions with variable arg list, e.g. 'func(...)' */
#define myST2IHN(a) (items>(a)) && (SvIOK(ST(a))) ? INT2PTR(Ihandle*, SvIVX(ST(a))) : NULL;
#define myST2STR(a) (items>(a)) && (SvPOK(ST(a))) ? SvPVX(ST(a)) : NULL;
#define myST2INT(a) (items>(a)) && (SvIOK(ST(a))) ? SvIVX(ST(a)) : 0;

/* convert 'SV' to 'Ihandle*' + do undef->NULL conversion */
#define mySV2IHN(a) (SvIOK(a) ? INT2PTR(Ihandle *, SvIVX(a)) : NULL)

cdCanvas* ref2cnv(SV* ref) {
  HV* h;
  SV** s;
  if ((h = (HV*)(SvRV(ref))) == NULL) return NULL;
  if ((s = hv_fetchs(h, "___cnvhandle", 0)) != NULL) return INT2PTR(cdCanvas*,SvIVX(*s));
  return NULL;
}

MODULE = IUP::Internal::Canvas	PACKAGE = IUP::Internal::Canvas

# http://perldoc.perl.org/perlxs.html
# http://perldoc.perl.org/perlxstut.html

# special internal function
cdCanvas*
_cdCreateCanvas_CD_IUP(ih)
		Ihandle* ih;
	CODE:
		RETVAL = cdCreateCanvas(CD_IUP, ih);
	OUTPUT:
		RETVAL

### generated part - start ###

[% FOREACH f IN allfnc -%]
#### Original C function from <[% f.header %]>
# [% f.orig %]
[% f.rvtype %]
[% f.cdfnc %]([% f.params_n1 %])
[% FOREACH p IN f.cdparams -%]
		[% p.type %] [% p.name %];
[% END -%]
[% IF f.rvtype == 'void' -%]
	CODE:
		[% f.fnc %]([% f.cdparams_n2 %]);
[% ELSE -%]
	CODE:
		RETVAL = [% f.fnc %]([% f.cdparams_n2 %]);
	OUTPUT:
		RETVAL
[% END -%]

[% END -%]

### generated part - end ###
